"use strict";function randInt(a,b){return"number"==typeof a&&"number"==typeof b?Math.floor(Math.random()*(b-a))+a:new Error("randInt: Type Error.\n randInt requires two arguments that are numbers.")}angular.module("musicJunkieCdnApp",["ngAnimate","ngRoute","ngSanitize","ngFileUpload"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/home.html",controller:"HomeCtrl"}).when("/songs",{templateUrl:"views/song.html",controller:"SongCtrl"}).when("/playlists",{templateUrl:"views/plays.html",controller:"PlayCtrl"}).otherwise({redirectTo:"/"})}]);var apiUrl="https://api.kriswithak.io/";angular.module("musicJunkieCdnApp").config(["$httpProvider",function(a){a.defaults.useXDomain=!0,delete a.defaults.headers.common["X-Requested-With"]}]).directive("modal",function(){return{templateUrl:"views/modal.html",scope:{message:"="},restrict:"A",link:function(a,b,c){a.$watch(c.triggerOn,function(a){a?b.modal("show"):b.modal("hide")})}}}).controller("GlobalCtrl",["$scope","$location",function(a,b){a.isActive=function(a){return a===b.path()},a.showingModal=!1,a.toggleModal=function(){a.showingModal?a.showingModal=!1:a.showingModal=!0}}]).controller("HomeCtrl",["$scope","$http",function(a,b){}]).controller("SongCtrl",["$scope","$http","Upload","$timeout",function(a,b,c,d){function e(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()}function f(){var a=["Neat!","Rad!","Awesome!","Fantastic!","Interesting!","Such knowledge!","Wow!","Much impress!","How about that!","Cool!","Wowzers!","Woah!","Thanks!","Fascinating!"];return a[randInt(0,a.length-1)]}function g(b,e){c.upload({url:apiUrl+"newSong",data:{file:c.rename(b,e)}}).then(function(b){d(function(){console.log("Success! \n"),h(),a.currentShow="",a.loading=null,a.song={}},1e3)},function(a){console.log("Uh oh! \n"+JSON.stringify(a))},function(b){a.loading=parseInt(100*b.loaded/b.total)+"%"})}a.song={};var h=function(){b.get(apiUrl+"activities").then(function(b){a.activities=[],b.data.length&&b.data.forEach(function(b){console.log(b);var c="panel-success",d="Added "+b.title+" by "+b.artist+".";a.activities.push({type:c,date:b.date,msg:d,comment:f()})})},function(b){a.toggleModal(),console.log(b)})};h(),a.songSubmit=function(a){var c=e(),d={title:a.title,artist:a.artist,album:a.album||a.title+" -- Single",genre:a.genre,id:c,date:Date.now()};b.post(apiUrl+"newMeta/song",d).then(function(a){console.log(a)},function(a){console.log(a)}),g(a.buffer,c)},a.purge=function(){b.get(apiUrl+"purge").then(function(b){console.log("Success! \n"+JSON.stringify(b)),h(),a.currentShow=""},function(a){console.log("Uh oh! \n"+JSON.stringify(a))})},window.checkID3=function(b){musicmetadata(b,function(b,c){if(b)throw b;a.song.title=c.title,a.song.artist=c.artist.toString(),a.song.album=c.album})},a.primaryGenres=["R&B/Hip-Hop","Pop","Country","Rock","Jazz","Electronica"],b.get(apiUrl+"playlists/all").then(function(b){b.data.length?(a.emptyPlaylist?a.emptyPlaylist=!1:{},a.secondaryGenres=[],b.data.forEach(function(b){a.primaryGenres.indexOf(b._id.playlist)+1||a.secondaryGenres.push(b._id.playlist)})):a.emptyPlaylist=!0},function(a){console.log(a)})}]).controller("PlayCtrl",["$scope","$http","$timeout",function(a,b,c){a._listCache={},a.currentShow="listView",b.get(apiUrl+"playlists/all").then(function(b){a.playlists=[],b.data.forEach(function(b){a.playlists.push(b._id.playlist)})}),a.currentShow="",a.activeList={},a.toggleView=function(c){c?(a.activeList.title=c,a.activeList.songs=[],a._listCache[c]?(a.activeList.songs=a._listCache[c],a.currentShow=c):b.get(apiUrl+"playlists/"+encodeURIComponent(c)).then(function(b){a._listCache[c]=[],b.data.forEach(function(b){b.toEdit=!1,a._listCache[c].push(b),a.activeList.songs.push(b),a.currentShow=c})},function(a){console.log(a)})):a.currentShow=""},a.mods=[],a.toggleMods=function(b){a.mods.indexOf(b.id)+1?a.mods=a.mods.filter(function(a){return a==b.id?!1:!0}):a.mods.push(b.id)},a.editList=function(d,e){var f={ids:e};b.post(apiUrl+"songs/remove",f).then(function(b){a.currentShow="",a.successShow=!0,c(function(){a.successShow=!1},5e3)},function(a){console.log(a)})}}]),angular.module("musicJunkieCdnApp").run(["$templateCache",function(a){a.put("views/home.html",'<div class="jumbotron" style="background-image: url(\'media/Concert.jpg\');\nbackground-size: cover;\nbackground-position: center;\ncolor: #fff"> <div class="container"> <h1>Music Junkie Admin Page</h1> <p>Add songs to the streaming service and manage song playlists.</p> </div> </div> <div class="container"> <div class="row"> <div class="col-md-6"> <h2>Add New Songs</h2> <p> New artist? Come up with a new jam you want to stream to the Music Junkie fanbase? Upload it here to get it to them. </p> <p> <a class="btn btn-primary" ng-href="#/songs" role="button">Upload</a> </p> </div> <div class="col-md-6"> <h2>Manage Playlists</h2> <p> Our playlists are carefully managed. If a song doesn\'t seem to fit the mood or perhaps could help another playlist better, change it here. </p> <a class="btn btn-primary" ng-href="#/playlists " role="button">Manage</a> </div> <div class="col-md-6"> <h2>Download the App</h2> <p> The app won\'t be found on the app store, unfortunately. Download the app here to get to streaming. </p> <a class="btn btn-primary" href="/download/musicJunkie.apk">Download</a> </div> </div> </div>'),a.put("views/modal.html",'<div class="modal-dialog"> <div class="modal-content"> <div class="modal-header"> <h4>{{message.title || "Error!"}}</h4> </div> <div class="modal-body"> <p>{{message.body || "An Undefined Error was Thrown!"}}</p> </div> <div class="modal-footer"> <button class="btn btn-primary" ng-click="toggleModal">Dismiss</button> </div> </div> </div>'),a.put("views/plays.html",'<div class="container-fluid"> <div class="row"> <div class="col-sm-3 col-md-2 sidebar"> <ul class="nav nav-sidebar"> <li ng-class="{active: (currentShow==\'\')}"> <a href="" ng-click="toggleView(\'\')"> Dashboard</a></li> <li ng-repeat="list in playlists" ng-class="{active: (currentShow == list)}"> <a href="" ng-click="toggleView(list) ">{{list}}</a> </li> </ul> </div> <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main"> <!-- Dashboard --> <div ng-show="!currentShow"> <div class="page-header"> <h1>Dashboard</h1> <div class="alert alert-success" ng-if="successShow"><strong>Success!</strong> Excellent work with those pesky songs!</div> </div> </div> <!-- End Dashboard --> <!-- >>>>>>><<<<<< --> <!-- Playlist-View --> <div ng-show="currentShow"> <div class="page-header"> <h1 ng-bind="activeList.title"></h1> </div> <form> <table class="table table-hover"> <thead> <tr> <th>#</th> <th>Song</th> <th>Artist</th> <th>Album</th> <th class="text-danger">Remove?</th> </tr> </thead> <tbody> <tr ng-repeat="song in activeList.songs" ng-class="{danger: (mods.indexOf(song.id) + 1)}"> <td ng-bind="$index + 1"></td> <td ng-bind="song.title"></td> <td ng-bind="song.artist"></td> <td ng-bind="song.album"></td> <td><input type="checkbox" ng-model="song.toEdit" ng-click="toggleMods(song)"></td> </tr> </tbody> </table> <input type="submit" class="btn btn-default" value="Change" ng-disabled="!mods.length" ng-click="editList(activeList.title, mods)"> </form> </div> <!-- End Playlist-View --> </div> </div> </div>'),a.put("views/song.html",'<div class="container-fluid"> <div class="row"> <div class="col-sm-3 col-md-2 sidebar"> <ul class="nav nav-sidebar"> <li ng-class="{active: (!currentShow)}"> <a href="" ng-click="currentShow = \'\'"> Dashboard</a></li> <li ng-class="{active: (currentShow == \'newSong\')}"> <a href="" ng-click="currentShow=\'newSong\'"> <span class="glyphicon glyphicon-upload"></span> New Song</a> </li> </ul> </div> <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main"> <div ng-show="!currentShow"> <h1 class="page-header">Dashboard</h1> <div class="panel" ng-class="act.type" ng-repeat="act in activities | orderBy:\'-date\'"> <div class="panel-heading" ng-bind="act.date | date:medium"> </div> <div class="panel-body"> <div class="row"> <div class="col-sm-8"> <h3 ng-bind="act.msg"></h3> </div> <div class="col-sm-4"> <h3><strong class="text-danger" ng-bind="act.comment"></strong></h3> </div> </div> </div> </div> </div> <!-- New Song Form --> <div ng-show="currentShow == \'newSong\'"> <form class="form-horizontal"> <div class="form-group page-header"> <h1>Upload a new song</h1> </div> <div class="form-group"> <input type="file" accept="audio/x-mpeg" name="song" ng-model="song.buffer" ngf-select onchange="checkID3(this.files[0])"> </div> <div class="form-group"> <label for="title" class="col-sm-2">Title</label> <div class="col-sm-10"> <input type="text" name="title" ng-model="song.title" ng-minlength="1" class="form-control" id="title"> </div> </div> <div class="form-group"> <label for="artist" class="col-sm-2">Artist</label> <div class="col-sm-10"> <input type="text" name="artist" ng-model="song.artist" ng-minlength="1" class="form-control" id="artist"> </div> </div> <div class="form-group"> <label for="album" class="col-sm-2">Album*</label> <div class="col-sm-10"> <input type="text" name="album" ng-model="song.album" ng-required="false" class="form-control" id="album"> </div> </div> <div class="form-group"> <label for="genre" class="col-sm-2">Genre</label> <div class="col-sm-10"> <div class="radio" ng-repeat="genre in primaryGenres"> <input name="genre" type="radio" ng-model="song.genre" ng-value="genre">{{genre}} </div> <div class="radio" ng-repeat="genre in secondaryGenres"> <input type="radio" name="genre" ng-model="song.genre" ng-value="genre">{{genre}} </div> <div class="form-group"> <p>Use a secondary genre? (Not Recommended) <input type="checkbox" ng-model="wantsSecondary"></p> <input type="text" class="form-control" ng-model="song.genre" ng-disabled="!wantsSecondary"> </div> </div> </div> <div class="form-group"> <button class="btn btn-primary" ng-click="songSubmit(song)"> Save </button> </div> <div class="form-group" ng-if="loading"> <div class="progress"> <div class="progress-bar" aria-valuenow="{{loading.substring(0, loading.length-1)}}" role="progressbar" aria-valuemin="0" aria-valuemax="100" ng-style="{width: loading}"> </div> </div> </div> </form> </div> <!-- End New Song Form --> <!-- Purge DB Form (only used in development) --> <!--\n      <div ng-show="currentShow == \'purgeDB\'">\n        <div class="page-header">\n          <h1>WARNING</h1>\n          <p class="lead">This will remove all items from MongoDB and the assets folder.</p>\n        </div>\n        <div class="container">\n          <h2>Are you sure you want to continue?</h2>\n          <button ng-click="purge()"\n            class="btn btn-danger">Delete Everything</button>\n        </div>\n      </div>\n      --> <!-- End Purge DB Form --> </div> </div> </div>')}]);